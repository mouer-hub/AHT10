|top
clk => clk.IN4
rst_n => rst_n.IN4
seg_sel[0] <= seg_driver:u_seg_driver.seg_sel
seg_sel[1] <= seg_driver:u_seg_driver.seg_sel
seg_sel[2] <= seg_driver:u_seg_driver.seg_sel
seg_sel[3] <= seg_driver:u_seg_driver.seg_sel
seg_sel[4] <= seg_driver:u_seg_driver.seg_sel
seg_sel[5] <= seg_driver:u_seg_driver.seg_sel
seg_dig[0] <= seg_driver:u_seg_driver.seg_dig
seg_dig[1] <= seg_driver:u_seg_driver.seg_dig
seg_dig[2] <= seg_driver:u_seg_driver.seg_dig
seg_dig[3] <= seg_driver:u_seg_driver.seg_dig
seg_dig[4] <= seg_driver:u_seg_driver.seg_dig
seg_dig[5] <= seg_driver:u_seg_driver.seg_dig
seg_dig[6] <= seg_driver:u_seg_driver.seg_dig
seg_dig[7] <= seg_driver:u_seg_driver.seg_dig
scl <= controler:u_controler.i2c_scl
sda <> controler:u_controler.i2c_sda
rx => ~NO_FANOUT~
tx <= uart_tx:u_uart_tx.tx_dout


|top|data_handle:u_data_handle
clk => flag.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => data[24].CLK
clk => data[25].CLK
clk => data[26].CLK
clk => data[27].CLK
clk => data[28].CLK
clk => data[29].CLK
clk => data[30].CLK
clk => data[31].CLK
clk => data[32].CLK
clk => data[33].CLK
clk => data[34].CLK
clk => data[35].CLK
clk => data[36].CLK
clk => data[37].CLK
clk => data[38].CLK
clk => data[39].CLK
rst_n => data[0].ACLR
rst_n => data[1].ACLR
rst_n => data[2].ACLR
rst_n => data[3].ACLR
rst_n => data[4].ACLR
rst_n => data[5].ACLR
rst_n => data[6].ACLR
rst_n => data[7].ACLR
rst_n => data[8].ACLR
rst_n => data[9].ACLR
rst_n => data[10].ACLR
rst_n => data[11].ACLR
rst_n => data[12].ACLR
rst_n => data[13].ACLR
rst_n => data[14].ACLR
rst_n => data[15].ACLR
rst_n => data[16].ACLR
rst_n => data[17].ACLR
rst_n => data[18].ACLR
rst_n => data[19].ACLR
rst_n => data[20].ACLR
rst_n => data[21].ACLR
rst_n => data[22].ACLR
rst_n => data[23].ACLR
rst_n => data[24].ACLR
rst_n => data[25].ACLR
rst_n => data[26].ACLR
rst_n => data[27].ACLR
rst_n => data[28].ACLR
rst_n => data[29].ACLR
rst_n => data[30].ACLR
rst_n => data[31].ACLR
rst_n => data[32].ACLR
rst_n => data[33].ACLR
rst_n => data[34].ACLR
rst_n => data[35].ACLR
rst_n => data[36].ACLR
rst_n => data[37].ACLR
rst_n => data[38].ACLR
rst_n => data[39].ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => flag.ACLR
din[0] => data[0].DATAIN
din[1] => data[1].DATAIN
din[2] => data[2].DATAIN
din[3] => data[3].DATAIN
din[4] => data[4].DATAIN
din[5] => data[5].DATAIN
din[6] => data[6].DATAIN
din[7] => data[7].DATAIN
din[8] => data[8].DATAIN
din[9] => data[9].DATAIN
din[10] => data[10].DATAIN
din[11] => data[11].DATAIN
din[12] => data[12].DATAIN
din[13] => data[13].DATAIN
din[14] => data[14].DATAIN
din[15] => data[15].DATAIN
din[16] => data[16].DATAIN
din[17] => data[17].DATAIN
din[18] => data[18].DATAIN
din[19] => data[19].DATAIN
din[20] => data[20].DATAIN
din[21] => data[21].DATAIN
din[22] => data[22].DATAIN
din[23] => data[23].DATAIN
din[24] => data[24].DATAIN
din[25] => data[25].DATAIN
din[26] => data[26].DATAIN
din[27] => data[27].DATAIN
din[28] => data[28].DATAIN
din[29] => data[29].DATAIN
din[30] => data[30].DATAIN
din[31] => data[31].DATAIN
din[32] => data[32].DATAIN
din[33] => data[33].DATAIN
din[34] => data[34].DATAIN
din[35] => data[35].DATAIN
din[36] => data[36].DATAIN
din[37] => data[37].DATAIN
din[38] => data[38].DATAIN
din[39] => data[39].DATAIN
din_vld => flag.OUTPUTSELECT
din_vld => data[39].ENA
din_vld => data[38].ENA
din_vld => data[37].ENA
din_vld => data[36].ENA
din_vld => data[35].ENA
din_vld => data[34].ENA
din_vld => data[33].ENA
din_vld => data[32].ENA
din_vld => data[31].ENA
din_vld => data[30].ENA
din_vld => data[29].ENA
din_vld => data[28].ENA
din_vld => data[27].ENA
din_vld => data[26].ENA
din_vld => data[25].ENA
din_vld => data[24].ENA
din_vld => data[23].ENA
din_vld => data[22].ENA
din_vld => data[21].ENA
din_vld => data[20].ENA
din_vld => data[19].ENA
din_vld => data[18].ENA
din_vld => data[17].ENA
din_vld => data[16].ENA
din_vld => data[15].ENA
din_vld => data[14].ENA
din_vld => data[13].ENA
din_vld => data[12].ENA
din_vld => data[11].ENA
din_vld => data[10].ENA
din_vld => data[9].ENA
din_vld => data[8].ENA
din_vld => data[7].ENA
din_vld => data[6].ENA
din_vld => data[5].ENA
din_vld => data[4].ENA
din_vld => data[3].ENA
din_vld => data[2].ENA
din_vld => data[1].ENA
din_vld => data[0].ENA
dout[0] <= Mod3.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= Mod3.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= Mod3.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= Mod3.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= Mod2.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= Mod2.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= Mod2.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= Mod2.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= <VCC>
dout[9] <= <VCC>
dout[10] <= <GND>
dout[11] <= <VCC>
dout[12] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
dout[13] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
dout[14] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
dout[15] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
dout[16] <= <GND>
dout[17] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
dout[18] <= <GND>
dout[19] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
dout[20] <= <GND>
dout[21] <= <VCC>
dout[22] <= <GND>
dout[23] <= <VCC>
busy => add_cnt.IN1
tx_byte_vld <= add_cnt.DB_MAX_OUTPUT_PORT_TYPE
tx_byte[0] <= tx[0].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[1] <= tx[1].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[2] <= tx[2].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[3] <= tx[3].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[4] <= tx[4].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[5] <= tx[5].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[6] <= tx[6].DB_MAX_OUTPUT_PORT_TYPE
tx_byte[7] <= tx[7].DB_MAX_OUTPUT_PORT_TYPE


|top|seg_driver:u_seg_driver
clk => seg_dig[0]~reg0.CLK
clk => seg_dig[1]~reg0.CLK
clk => seg_dig[2]~reg0.CLK
clk => seg_dig[3]~reg0.CLK
clk => seg_dig[4]~reg0.CLK
clk => seg_dig[5]~reg0.CLK
clk => seg_dig[6]~reg0.CLK
clk => seg_dig[7]~reg0.CLK
clk => dot.CLK
clk => value[0].CLK
clk => value[1].CLK
clk => value[2].CLK
clk => value[3].CLK
clk => seg_sel[0]~reg0.CLK
clk => seg_sel[1]~reg0.CLK
clk => seg_sel[2]~reg0.CLK
clk => seg_sel[3]~reg0.CLK
clk => seg_sel[4]~reg0.CLK
clk => seg_sel[5]~reg0.CLK
clk => cnt_scan[0].CLK
clk => cnt_scan[1].CLK
clk => cnt_scan[2].CLK
clk => cnt_t[0].CLK
clk => cnt_t[1].CLK
clk => cnt_t[2].CLK
clk => cnt_t[3].CLK
clk => cnt_t[4].CLK
clk => cnt_t[5].CLK
clk => cnt_t[6].CLK
clk => cnt_t[7].CLK
clk => cnt_t[8].CLK
clk => cnt_t[9].CLK
clk => cnt_t[10].CLK
clk => cnt_t[11].CLK
clk => cnt_t[12].CLK
clk => cnt_t[13].CLK
clk => cnt_t[14].CLK
clk => cnt_t[15].CLK
rst_n => cnt_t[0].ACLR
rst_n => cnt_t[1].ACLR
rst_n => cnt_t[2].ACLR
rst_n => cnt_t[3].ACLR
rst_n => cnt_t[4].ACLR
rst_n => cnt_t[5].ACLR
rst_n => cnt_t[6].ACLR
rst_n => cnt_t[7].ACLR
rst_n => cnt_t[8].ACLR
rst_n => cnt_t[9].ACLR
rst_n => cnt_t[10].ACLR
rst_n => cnt_t[11].ACLR
rst_n => cnt_t[12].ACLR
rst_n => cnt_t[13].ACLR
rst_n => cnt_t[14].ACLR
rst_n => cnt_t[15].ACLR
rst_n => seg_dig[0]~reg0.ACLR
rst_n => seg_dig[1]~reg0.ACLR
rst_n => seg_dig[2]~reg0.ACLR
rst_n => seg_dig[3]~reg0.ACLR
rst_n => seg_dig[4]~reg0.ACLR
rst_n => seg_dig[5]~reg0.ACLR
rst_n => seg_dig[6]~reg0.PRESET
rst_n => seg_dig[7]~reg0.ALOAD
rst_n => seg_sel[0]~reg0.ACLR
rst_n => seg_sel[1]~reg0.PRESET
rst_n => seg_sel[2]~reg0.PRESET
rst_n => seg_sel[3]~reg0.PRESET
rst_n => seg_sel[4]~reg0.PRESET
rst_n => seg_sel[5]~reg0.PRESET
rst_n => cnt_scan[0].ACLR
rst_n => cnt_scan[1].ACLR
rst_n => cnt_scan[2].ACLR
rst_n => dot.ACLR
rst_n => value[0].ACLR
rst_n => value[1].ACLR
rst_n => value[2].ACLR
rst_n => value[3].ACLR
din[0] => Mux3.IN7
din[1] => Mux2.IN7
din[2] => Mux1.IN7
din[3] => Mux0.IN7
din[4] => Mux3.IN6
din[5] => Mux2.IN6
din[6] => Mux1.IN6
din[7] => Mux0.IN6
din[8] => Mux3.IN5
din[9] => Mux2.IN5
din[10] => Mux1.IN5
din[11] => Mux0.IN5
din[12] => Mux3.IN4
din[13] => Mux2.IN4
din[14] => Mux1.IN4
din[15] => Mux0.IN4
din[16] => Mux3.IN3
din[17] => Mux2.IN3
din[18] => Mux1.IN3
din[19] => Mux0.IN3
din[20] => Mux3.IN2
din[21] => Mux2.IN2
din[22] => Mux1.IN2
din[23] => Mux0.IN2
seg_sel[0] <= seg_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[1] <= seg_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[2] <= seg_sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[3] <= seg_sel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[4] <= seg_sel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[5] <= seg_sel[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[0] <= seg_dig[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[1] <= seg_dig[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[2] <= seg_dig[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[3] <= seg_dig[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[4] <= seg_dig[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[5] <= seg_dig[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[6] <= seg_dig[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dig[7] <= seg_dig[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controler:u_controler
clk => clk.IN2
rst_n => rst_n.IN2
dout[0] <= AHT10_rw:u_rw_ctrl.dout
dout[1] <= AHT10_rw:u_rw_ctrl.dout
dout[2] <= AHT10_rw:u_rw_ctrl.dout
dout[3] <= AHT10_rw:u_rw_ctrl.dout
dout[4] <= AHT10_rw:u_rw_ctrl.dout
dout[5] <= AHT10_rw:u_rw_ctrl.dout
dout[6] <= AHT10_rw:u_rw_ctrl.dout
dout[7] <= AHT10_rw:u_rw_ctrl.dout
dout[8] <= AHT10_rw:u_rw_ctrl.dout
dout[9] <= AHT10_rw:u_rw_ctrl.dout
dout[10] <= AHT10_rw:u_rw_ctrl.dout
dout[11] <= AHT10_rw:u_rw_ctrl.dout
dout[12] <= AHT10_rw:u_rw_ctrl.dout
dout[13] <= AHT10_rw:u_rw_ctrl.dout
dout[14] <= AHT10_rw:u_rw_ctrl.dout
dout[15] <= AHT10_rw:u_rw_ctrl.dout
dout[16] <= AHT10_rw:u_rw_ctrl.dout
dout[17] <= AHT10_rw:u_rw_ctrl.dout
dout[18] <= AHT10_rw:u_rw_ctrl.dout
dout[19] <= AHT10_rw:u_rw_ctrl.dout
dout[20] <= AHT10_rw:u_rw_ctrl.dout
dout[21] <= AHT10_rw:u_rw_ctrl.dout
dout[22] <= AHT10_rw:u_rw_ctrl.dout
dout[23] <= AHT10_rw:u_rw_ctrl.dout
dout[24] <= AHT10_rw:u_rw_ctrl.dout
dout[25] <= AHT10_rw:u_rw_ctrl.dout
dout[26] <= AHT10_rw:u_rw_ctrl.dout
dout[27] <= AHT10_rw:u_rw_ctrl.dout
dout[28] <= AHT10_rw:u_rw_ctrl.dout
dout[29] <= AHT10_rw:u_rw_ctrl.dout
dout[30] <= AHT10_rw:u_rw_ctrl.dout
dout[31] <= AHT10_rw:u_rw_ctrl.dout
dout[32] <= AHT10_rw:u_rw_ctrl.dout
dout[33] <= AHT10_rw:u_rw_ctrl.dout
dout[34] <= AHT10_rw:u_rw_ctrl.dout
dout[35] <= AHT10_rw:u_rw_ctrl.dout
dout[36] <= AHT10_rw:u_rw_ctrl.dout
dout[37] <= AHT10_rw:u_rw_ctrl.dout
dout[38] <= AHT10_rw:u_rw_ctrl.dout
dout[39] <= AHT10_rw:u_rw_ctrl.dout
dout_vld <= AHT10_rw:u_rw_ctrl.dout_vld
i2c_scl <= i2c_master:u_i2c.i2c_scl
i2c_sda <> i2c_sda


|top|controler:u_controler|AHT10_rw:u_rw_ctrl
clk => dout_vld~reg0.CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => data[24].CLK
clk => data[25].CLK
clk => data[26].CLK
clk => data[27].CLK
clk => data[28].CLK
clk => data[29].CLK
clk => data[30].CLK
clk => data[31].CLK
clk => data[32].CLK
clk => data[33].CLK
clk => data[34].CLK
clk => data[35].CLK
clk => data[36].CLK
clk => data[37].CLK
clk => data[38].CLK
clk => data[39].CLK
clk => cnt_byte[0].CLK
clk => cnt_byte[1].CLK
clk => cnt_byte[2].CLK
clk => cnt_byte[3].CLK
clk => cnt_byte[4].CLK
clk => cnt_ms[0].CLK
clk => cnt_ms[1].CLK
clk => cnt_ms[2].CLK
clk => cnt_ms[3].CLK
clk => cnt_ms[4].CLK
clk => cnt_ms[5].CLK
clk => cnt_ms[6].CLK
clk => cnt_ms[7].CLK
clk => cnt_ms[8].CLK
clk => cnt_ms[9].CLK
clk => cnt_ms[10].CLK
clk => cnt_ms[11].CLK
clk => cnt_ms[12].CLK
clk => cnt_ms[13].CLK
clk => cnt_ms[14].CLK
clk => cnt_ms[15].CLK
clk => cnt_ms[16].CLK
clk => cnt_ms[17].CLK
clk => cnt_ms[18].CLK
clk => cnt_ms[19].CLK
clk => cnt_ms[20].CLK
clk => cnt_ms[21].CLK
clk => cnt_ms[22].CLK
clk => cnt_ms[23].CLK
clk => cnt_ms[24].CLK
clk => cnt_ms[25].CLK
clk => cnt_ms[26].CLK
clk => cnt_ms[27].CLK
clk => state_c~1.DATAIN
rst_n => data[0].ACLR
rst_n => data[1].ACLR
rst_n => data[2].ACLR
rst_n => data[3].ACLR
rst_n => data[4].ACLR
rst_n => data[5].ACLR
rst_n => data[6].ACLR
rst_n => data[7].ACLR
rst_n => data[8].ACLR
rst_n => data[9].ACLR
rst_n => data[10].ACLR
rst_n => data[11].ACLR
rst_n => data[12].ACLR
rst_n => data[13].ACLR
rst_n => data[14].ACLR
rst_n => data[15].ACLR
rst_n => data[16].ACLR
rst_n => data[17].ACLR
rst_n => data[18].ACLR
rst_n => data[19].ACLR
rst_n => data[20].ACLR
rst_n => data[21].ACLR
rst_n => data[22].ACLR
rst_n => data[23].ACLR
rst_n => data[24].ACLR
rst_n => data[25].ACLR
rst_n => data[26].ACLR
rst_n => data[27].ACLR
rst_n => data[28].ACLR
rst_n => data[29].ACLR
rst_n => data[30].ACLR
rst_n => data[31].ACLR
rst_n => data[32].ACLR
rst_n => data[33].ACLR
rst_n => data[34].ACLR
rst_n => data[35].ACLR
rst_n => data[36].ACLR
rst_n => data[37].ACLR
rst_n => data[38].ACLR
rst_n => data[39].ACLR
rst_n => dout_vld~reg0.ACLR
rst_n => cnt_ms[0].ACLR
rst_n => cnt_ms[1].ACLR
rst_n => cnt_ms[2].ACLR
rst_n => cnt_ms[3].ACLR
rst_n => cnt_ms[4].ACLR
rst_n => cnt_ms[5].ACLR
rst_n => cnt_ms[6].ACLR
rst_n => cnt_ms[7].ACLR
rst_n => cnt_ms[8].ACLR
rst_n => cnt_ms[9].ACLR
rst_n => cnt_ms[10].ACLR
rst_n => cnt_ms[11].ACLR
rst_n => cnt_ms[12].ACLR
rst_n => cnt_ms[13].ACLR
rst_n => cnt_ms[14].ACLR
rst_n => cnt_ms[15].ACLR
rst_n => cnt_ms[16].ACLR
rst_n => cnt_ms[17].ACLR
rst_n => cnt_ms[18].ACLR
rst_n => cnt_ms[19].ACLR
rst_n => cnt_ms[20].ACLR
rst_n => cnt_ms[21].ACLR
rst_n => cnt_ms[22].ACLR
rst_n => cnt_ms[23].ACLR
rst_n => cnt_ms[24].ACLR
rst_n => cnt_ms[25].ACLR
rst_n => cnt_ms[26].ACLR
rst_n => cnt_ms[27].ACLR
rst_n => cnt_byte[0].ACLR
rst_n => cnt_byte[1].ACLR
rst_n => cnt_byte[2].ACLR
rst_n => cnt_byte[3].ACLR
rst_n => cnt_byte[4].ACLR
rst_n => state_c~3.DATAIN
dout[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= data[8].DB_MAX_OUTPUT_PORT_TYPE
dout[9] <= data[9].DB_MAX_OUTPUT_PORT_TYPE
dout[10] <= data[10].DB_MAX_OUTPUT_PORT_TYPE
dout[11] <= data[11].DB_MAX_OUTPUT_PORT_TYPE
dout[12] <= data[12].DB_MAX_OUTPUT_PORT_TYPE
dout[13] <= data[13].DB_MAX_OUTPUT_PORT_TYPE
dout[14] <= data[14].DB_MAX_OUTPUT_PORT_TYPE
dout[15] <= data[15].DB_MAX_OUTPUT_PORT_TYPE
dout[16] <= data[16].DB_MAX_OUTPUT_PORT_TYPE
dout[17] <= data[17].DB_MAX_OUTPUT_PORT_TYPE
dout[18] <= data[18].DB_MAX_OUTPUT_PORT_TYPE
dout[19] <= data[19].DB_MAX_OUTPUT_PORT_TYPE
dout[20] <= data[20].DB_MAX_OUTPUT_PORT_TYPE
dout[21] <= data[21].DB_MAX_OUTPUT_PORT_TYPE
dout[22] <= data[22].DB_MAX_OUTPUT_PORT_TYPE
dout[23] <= data[23].DB_MAX_OUTPUT_PORT_TYPE
dout[24] <= data[24].DB_MAX_OUTPUT_PORT_TYPE
dout[25] <= data[25].DB_MAX_OUTPUT_PORT_TYPE
dout[26] <= data[26].DB_MAX_OUTPUT_PORT_TYPE
dout[27] <= data[27].DB_MAX_OUTPUT_PORT_TYPE
dout[28] <= data[28].DB_MAX_OUTPUT_PORT_TYPE
dout[29] <= data[29].DB_MAX_OUTPUT_PORT_TYPE
dout[30] <= data[30].DB_MAX_OUTPUT_PORT_TYPE
dout[31] <= data[31].DB_MAX_OUTPUT_PORT_TYPE
dout[32] <= data[32].DB_MAX_OUTPUT_PORT_TYPE
dout[33] <= data[33].DB_MAX_OUTPUT_PORT_TYPE
dout[34] <= data[34].DB_MAX_OUTPUT_PORT_TYPE
dout[35] <= data[35].DB_MAX_OUTPUT_PORT_TYPE
dout[36] <= data[36].DB_MAX_OUTPUT_PORT_TYPE
dout[37] <= data[37].DB_MAX_OUTPUT_PORT_TYPE
dout[38] <= data[38].DB_MAX_OUTPUT_PORT_TYPE
dout[39] <= data[39].DB_MAX_OUTPUT_PORT_TYPE
dout_vld <= dout_vld~reg0.DB_MAX_OUTPUT_PORT_TYPE
req <= req_r.DB_MAX_OUTPUT_PORT_TYPE
cmd[0] <= cmd_r[0].DB_MAX_OUTPUT_PORT_TYPE
cmd[1] <= cmd_r[1].DB_MAX_OUTPUT_PORT_TYPE
cmd[2] <= cmd_r[2].DB_MAX_OUTPUT_PORT_TYPE
cmd[3] <= cmd_r[3].DB_MAX_OUTPUT_PORT_TYPE
wr_data[0] <= data_r[0].DB_MAX_OUTPUT_PORT_TYPE
wr_data[1] <= data_r[1].DB_MAX_OUTPUT_PORT_TYPE
wr_data[2] <= data_r[2].DB_MAX_OUTPUT_PORT_TYPE
wr_data[3] <= data_r[3].DB_MAX_OUTPUT_PORT_TYPE
wr_data[4] <= data_r[4].DB_MAX_OUTPUT_PORT_TYPE
wr_data[5] <= data_r[5].DB_MAX_OUTPUT_PORT_TYPE
wr_data[6] <= data_r[6].DB_MAX_OUTPUT_PORT_TYPE
wr_data[7] <= data_r[7].DB_MAX_OUTPUT_PORT_TYPE
rd_data[0] => data[0].DATAIN
rd_data[1] => data[1].DATAIN
rd_data[2] => data[2].DATAIN
rd_data[3] => cal_state2measure.IN1
rd_data[3] => cal_state2init.IN1
rd_data[3] => data[3].DATAIN
rd_data[4] => data[4].DATAIN
rd_data[5] => data[5].DATAIN
rd_data[6] => data[6].DATAIN
rd_data[7] => data[7].DATAIN
done => init2cal_state.IN1
done => cal_state2init.IN1
done => cal_state2measure.IN1
done => measure2mea_wait.IN1
done => read2delay.IN1
done => add_cnt_byte.IN1
done => always7.IN0


|top|controler:u_controler|i2c_master:u_i2c
clk => rx_ack.CLK
clk => rx_data[0].CLK
clk => rx_data[1].CLK
clk => rx_data[2].CLK
clk => rx_data[3].CLK
clk => rx_data[4].CLK
clk => rx_data[5].CLK
clk => rx_data[6].CLK
clk => rx_data[7].CLK
clk => sda_out_en.CLK
clk => sda_out.CLK
clk => scl.CLK
clk => tx_data[0].CLK
clk => tx_data[1].CLK
clk => tx_data[2].CLK
clk => tx_data[3].CLK
clk => tx_data[4].CLK
clk => tx_data[5].CLK
clk => tx_data[6].CLK
clk => tx_data[7].CLK
clk => command[1].CLK
clk => command[2].CLK
clk => command[3].CLK
clk => cnt_bit[0].CLK
clk => cnt_bit[1].CLK
clk => cnt_bit[2].CLK
clk => cnt_bit[3].CLK
clk => cnt_scl[0].CLK
clk => cnt_scl[1].CLK
clk => cnt_scl[2].CLK
clk => cnt_scl[3].CLK
clk => cnt_scl[4].CLK
clk => cnt_scl[5].CLK
clk => cnt_scl[6].CLK
clk => cnt_scl[7].CLK
clk => cnt_scl[8].CLK
clk => state_c~1.DATAIN
rst_n => rx_data[0].ACLR
rst_n => rx_data[1].ACLR
rst_n => rx_data[2].ACLR
rst_n => rx_data[3].ACLR
rst_n => rx_data[4].ACLR
rst_n => rx_data[5].ACLR
rst_n => rx_data[6].ACLR
rst_n => rx_data[7].ACLR
rst_n => rx_ack.PRESET
rst_n => scl.PRESET
rst_n => sda_out.PRESET
rst_n => sda_out_en.ACLR
rst_n => cnt_scl[0].ACLR
rst_n => cnt_scl[1].ACLR
rst_n => cnt_scl[2].ACLR
rst_n => cnt_scl[3].ACLR
rst_n => cnt_scl[4].ACLR
rst_n => cnt_scl[5].ACLR
rst_n => cnt_scl[6].ACLR
rst_n => cnt_scl[7].ACLR
rst_n => cnt_scl[8].ACLR
rst_n => cnt_bit[0].ACLR
rst_n => cnt_bit[1].ACLR
rst_n => cnt_bit[2].ACLR
rst_n => cnt_bit[3].ACLR
rst_n => command[1].ACLR
rst_n => command[2].ACLR
rst_n => command[3].ACLR
rst_n => tx_data[0].ACLR
rst_n => tx_data[1].ACLR
rst_n => tx_data[2].ACLR
rst_n => tx_data[3].ACLR
rst_n => tx_data[4].ACLR
rst_n => tx_data[5].ACLR
rst_n => tx_data[6].ACLR
rst_n => tx_data[7].ACLR
rst_n => state_c~3.DATAIN
req => idle2start.IN0
req => idle2write.IN0
req => idle2read.IN0
req => command[3].ENA
req => command[2].ENA
req => command[1].ENA
req => tx_data[7].ENA
req => tx_data[6].ENA
req => tx_data[5].ENA
req => tx_data[4].ENA
req => tx_data[3].ENA
req => tx_data[2].ENA
req => tx_data[1].ENA
req => tx_data[0].ENA
cmd[0] => idle2start.IN1
cmd[1] => idle2write.IN1
cmd[1] => command[1].DATAIN
cmd[2] => idle2read.IN1
cmd[2] => command[2].DATAIN
cmd[3] => command[3].DATAIN
din[0] => tx_data[0].DATAIN
din[1] => tx_data[1].DATAIN
din[2] => tx_data[2].DATAIN
din[3] => tx_data[3].DATAIN
din[4] => tx_data[4].DATAIN
din[5] => tx_data[5].DATAIN
din[6] => tx_data[6].DATAIN
din[7] => tx_data[7].DATAIN
dout[0] <= rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= rx_data[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= rx_data[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= rx_data[6].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= rx_data[7].DB_MAX_OUTPUT_PORT_TYPE
done <= done.DB_MAX_OUTPUT_PORT_TYPE
slave_ack <= rx_ack.DB_MAX_OUTPUT_PORT_TYPE
i2c_scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_data.DATAB
i2c_sda_i => rx_ack.DATAIN
i2c_sda_o <= sda_out.DB_MAX_OUTPUT_PORT_TYPE
i2c_sda_oe <= sda_out_en.DB_MAX_OUTPUT_PORT_TYPE


|top|uart_tx:u_uart_tx
clk => tx_dout_r.CLK
clk => cnt_bit[0].CLK
clk => cnt_bit[1].CLK
clk => cnt_bit[2].CLK
clk => cnt_bit[3].CLK
clk => cnt_baud[0].CLK
clk => cnt_baud[1].CLK
clk => cnt_baud[2].CLK
clk => cnt_baud[3].CLK
clk => cnt_baud[4].CLK
clk => cnt_baud[5].CLK
clk => cnt_baud[6].CLK
clk => cnt_baud[7].CLK
clk => cnt_baud[8].CLK
clk => cnt_baud[9].CLK
clk => cnt_baud[10].CLK
clk => cnt_baud[11].CLK
clk => cnt_baud[12].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => flag.CLK
rst_n => data[0].ACLR
rst_n => data[1].ACLR
rst_n => data[2].ACLR
rst_n => data[3].ACLR
rst_n => data[4].ACLR
rst_n => data[5].ACLR
rst_n => data[6].ACLR
rst_n => data[7].ACLR
rst_n => data[8].ACLR
rst_n => data[9].ACLR
rst_n => flag.ACLR
rst_n => tx_dout_r.PRESET
rst_n => cnt_baud[0].ACLR
rst_n => cnt_baud[1].ACLR
rst_n => cnt_baud[2].ACLR
rst_n => cnt_baud[3].ACLR
rst_n => cnt_baud[4].ACLR
rst_n => cnt_baud[5].ACLR
rst_n => cnt_baud[6].ACLR
rst_n => cnt_baud[7].ACLR
rst_n => cnt_baud[8].ACLR
rst_n => cnt_baud[9].ACLR
rst_n => cnt_baud[10].ACLR
rst_n => cnt_baud[11].ACLR
rst_n => cnt_baud[12].ACLR
rst_n => cnt_bit[0].ACLR
rst_n => cnt_bit[1].ACLR
rst_n => cnt_bit[2].ACLR
rst_n => cnt_bit[3].ACLR
baud_sel[0] => Decoder0.IN1
baud_sel[0] => Add1.IN17
baud_sel[0] => Add1.IN22
baud_sel[1] => Decoder0.IN0
baud_sel[1] => Add1.IN19
baud_sel[1] => Add1.IN24
baud_sel[1] => Add1.IN26
tx_byte_vld => flag.OUTPUTSELECT
tx_byte_vld => data[9].ENA
tx_byte_vld => data[8].ENA
tx_byte_vld => data[7].ENA
tx_byte_vld => data[6].ENA
tx_byte_vld => data[5].ENA
tx_byte_vld => data[4].ENA
tx_byte_vld => data[3].ENA
tx_byte_vld => data[2].ENA
tx_byte_vld => data[1].ENA
tx_byte_vld => data[0].ENA
tx_byte[0] => data[1].DATAIN
tx_byte[1] => data[2].DATAIN
tx_byte[2] => data[3].DATAIN
tx_byte[3] => data[4].DATAIN
tx_byte[4] => data[5].DATAIN
tx_byte[5] => data[6].DATAIN
tx_byte[6] => data[7].DATAIN
tx_byte[7] => data[8].DATAIN
busy <= flag.DB_MAX_OUTPUT_PORT_TYPE
tx_dout <= tx_dout_r.DB_MAX_OUTPUT_PORT_TYPE


